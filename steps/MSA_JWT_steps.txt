RESTAPP->bootstrap->
@LoginConfig(authMethod='MP.JWT')
@DeclareRoles({"Admin","Supervisor"})
public class Bootstrap...


Restapp->exampleservice->

@GET
@RolesAllowed("Admin") -->can give for each method by writting above it.

get()

jwtjar->place in a folder inside ur project

cmd - move to the same folder where jar file is place.
type command - > java - jar jwtenizre.jar

jwtenizre.jar - is the token jar file

open jwt-token.json ->edit groups : ["Admin", "supervisor"]

again execute the same command in cmd to generate token files to generate new tokens as per ur groups.

open-token.jwt file. copy the encrypted token content

browse site->jwt.io ->paste the encrypted token->it wil show you the decrytped contents on right side

open microprofileeconfigproperties ->copycontents (taken snap)

in REstapp->other sources->new folder(meta-inf)->new properties file->paste contents

in restclient->other sources->new folder(meta-inf)->new properties file->jwt-string=paste contents from token.jwt

restclient->interfacefile->
@get
@ClientHeaderParam(name="authorization", value="{generateJWTToken}")
@RolesAllowed("Admin")

create generateJWTToken method in interface

default String generateJWTToken()
{
	Config config = ConfigProvider.getConfig();
String token = "Bearer "+config.getValue("jwt-string", String.class);
return token;
}

clean and build projects
run restapp
run servlet from restclient

================================================
in restclient->paste the token folder given


create a folder called keys anywhere in machine
and type commands

in client app
copy private key file generated by command in other sources->src/main/resource

in restapp
copy public key file in same location as client app

in clientapp->in pom.xml->add depenedncy for io.vertex

in generatetoken.java->edit token.setSub, token.setIss, etc...

in clientapp->generatejwttoken()->String token = "Bearer "+GenerateToken.generateJST();
return token;

comment previous code in same method.


in restapp->othersource->new properties file->payara-mp-jwt.properties

type in properties file--> accepted.issuer="https://server.example.com"

=====================================
To run payara micro

paste payara jar file in folder where your projects are placed.
in clientapp-> microprofile-config file->edit port from 8080 to 8085

clean and build both apps

type in command in cmd(taken snap) to run restapp on payara micro - this runs at port 8085
java -jar payara-micro-5.194.jar --deploy C:/Users/91800/Documents/NetBeansProjects/RestApp/artifact/RestApp.war --port 8085

now type command to run restclient on payara micro(taken snap) - run this on 8086
java -jar payara-micro-5.194.jar --deploy C:/Users/91800/Documents/NetBeansProjects/RestClient/artifact/RestClient.war --port 8086


